#include <Arduino.h>

// Hindari D0 & D15 (tidak stabil)
const int S0 = D5;        // GPIO14
const int S1 = D6;        // GPIO12
const int S2 = D7;        // GPIO13
const int S3 = D4;        // GPIO2
const int sensorOut = D2; // GPIO4

// ===== Variabel frekuensi warna =====
int redFrequency = 0;
int greenFrequency = 0;
int blueFrequency = 0;

// ====== Bobot dan Bias dari Python (hasil training ANN) ======
float weights[3][3] = {
  {5.905637288, -1.7600959720, -2.0883289398},
  {-2.4917673708, 5.9018896783, -2.4899542626},
  {-2.3446083106, -1.9130676520, 5.7831227323}
};

float bias[3] = {
  0.7323626748,
  0.2843566652,
  0.6816681843
};

// ====== Variabel Kalibrasi Hitam & Putih ======
int whiteRef[3] = {0, 0, 0}; // R, G, B untuk putih
int blackRef[3] = {0, 0, 0}; // R, G, B untuk hitam

// ===== Fungsi Softmax =====
void softmax(float *z, int n) {
  float maxVal = z[0];
  for (int i = 1; i < n; i++) if (z[i] > maxVal) maxVal = z[i];
  float sum = 0;
  for (int i = 0; i < n; i++) {
    z[i] = exp(z[i] - maxVal);
    sum += z[i];
  }
  for (int i = 0; i < n; i++) {
    z[i] /= sum;
  }
}

// ======== Baca frekuensi dari TCS3200 ========
int readColor(char color) {
  if (color == 'R') {
    digitalWrite(S2, LOW);
    digitalWrite(S3, LOW);
  } else if (color == 'G') {
    digitalWrite(S2, HIGH);
    digitalWrite(S3, HIGH);
  } else if (color == 'B') {
    digitalWrite(S2, LOW);
    digitalWrite(S3, HIGH);
  }
  delay(50);
  return pulseIn(sensorOut, LOW);
}

// ====== Kalibrasi ======
void calibrateWhite() {
  Serial.println("\n[Kalibrasi PUTIH] Letakkan kertas putih di bawah sensor, tunggu 3 detik...");
  delay(3000);
  whiteRef[0] = readColor('R');
  whiteRef[1] = readColor('G');
  whiteRef[2] = readColor('B');
  Serial.printf("White Ref: R=%d G=%d B=%d\n", whiteRef[0], whiteRef[1], whiteRef[2]);
}

void calibrateBlack() {
  Serial.println("\n[Kalibrasi HITAM] Tutup sensor atau gunakan warna hitam pekat, tunggu 3 detik...");
  delay(3000);
  blackRef[0] = readColor('R');
  blackRef[1] = readColor('G');
  blackRef[2] = readColor('B');
  Serial.printf("Black Ref: R=%d G=%d B=%d\n", blackRef[0], blackRef[1], blackRef[2]);
}

// ===== Normalisasi dengan kalibrasi =====
float normalizeWithCalibration(int measured, int whiteVal, int blackVal) {
  if (blackVal == whiteVal) return 0.0; // Hindari pembagian 0
  float norm = (float)(blackVal - measured) / (float)(blackVal - whiteVal);
  if (norm < 0) norm = 0;
  if (norm > 1) norm = 1;
  return norm;
}

void setup() {
  Serial.begin(115200);

  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  pinMode(sensorOut, INPUT);

  // Setting scale 100%
  digitalWrite(S0, HIGH);
  digitalWrite(S1, HIGH);

  Serial.println("=== TCS3200 + ANN + Kalibrasi siap ===");
  Serial.println("Tekan 'w' untuk kalibrasi putih, 'b' untuk kalibrasi hitam");

  // (Opsional) lakukan otomatis di awal
  // calibrateWhite();
  // calibrateBlack();
}

void loop() {
  // Cek input serial untuk kalibrasi
  if (Serial.available()) {
    char cmd = Serial.read();
    if (cmd == 'w') calibrateWhite();
    if (cmd == 'b') calibrateBlack();
  }

  // === Baca warna mentah ===
  redFrequency = readColor('R');
  greenFrequency = readColor('G');
  blueFrequency = readColor('B');

  // === Normalisasi pakai kalibrasi ===
  float R = normalizeWithCalibration(redFrequency, whiteRef[0], blackRef[0]);
  float G = normalizeWithCalibration(greenFrequency, whiteRef[1], blackRef[1]);
  float B = normalizeWithCalibration(blueFrequency, whiteRef[2], blackRef[2]);

  // === ANN Forward ===
  float z[3]; // output sebelum softmax

  for (int j = 0; j < 3; j++) {
    z[j] = R * weights[0][j] + G * weights[1][j] + B * weights[2][j] + bias[j];
  }

  softmax(z, 3);

  // Cari kelas dengan probabilitas tertinggi
  int maxIndex = 0;
  for (int i = 1; i < 3; i++) {
    if (z[i] > z[maxIndex]) maxIndex = i;
  }

  String warna;
  if (maxIndex == 0) warna = "MERAH";
  else if (maxIndex == 1) warna = "HIJAU";
  else warna = "BIRU";

  Serial.println("=====================================");
  Serial.printf("Raw Freq   : R=%d G=%d B=%d\n", redFrequency, greenFrequency, blueFrequency);
  Serial.printf("Normalized : R=%.3f G=%.3f B=%.3f\n", R, G, B);
  Serial.printf("Probabilitas ANN â†’ Merah=%.2f  Hijau=%.2f  Biru=%.2f\n", z[0], z[1], z[2]);
  Serial.printf(">> Hasil Prediksi: %s\n", warna.c_str());

  delay(800);
}
